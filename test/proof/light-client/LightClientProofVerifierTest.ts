import { ethers } from 'hardhat';
import { loadFixture, mine } from '@nomicfoundation/hardhat-network-helpers';
import { keccak256, toUtf8Bytes } from 'ethers';
import { expect } from 'chai';

import { EncodeLightClientProofParams, encodeLightClientProof } from '../../../scripts/lib/contract/proof/light-client/proofEncode';

import { printGasInfo } from '../../common/gas';
import { expectRevert } from '../../common/revert';

const LIGHT_CLIENT_VERIFIER_VERSION = 0;
const MIN_LIGHT_CLIENT_DELAY = 30;

const waitMinLightClientDelay = async (): Promise<void> => {
  const blockTime = 15;
  const safetyBlocks = 2;
  const blocksToWait = Math.ceil(MIN_LIGHT_CLIENT_DELAY / blockTime) + safetyBlocks;
  await mine(blocksToWait, { interval: blockTime });
};

describe('LightClientProofVerifierTest', function () {
  async function deployFixture() {
    const LightClientMock = await ethers.getContractFactory('LightClientMock');
    const lightClientMock = await LightClientMock.deploy();

    const LightClientProofVerifier = await ethers.getContractFactory('LightClientProofVerifier');

    const ProofVerifierTest = await ethers.getContractFactory('ProofVerifierTest');

    const deployProofVerifierTest = async (chain: number, contract: string) => {
      const lightClientProofVerifier = await LightClientProofVerifier.deploy(
        chain,
        await lightClientMock.getAddress(),
        contract,
        MIN_LIGHT_CLIENT_DELAY,
      );
      const proofVerifierTest = await ProofVerifierTest.deploy(
        chain,
        LIGHT_CLIENT_VERIFIER_VERSION,
        await lightClientProofVerifier.getAddress(),
      );
      return proofVerifierTest;
    };

    return {
      lightClientMock,
      deployProofVerifierTest,
    };
  }

  it('Should verify hash event proof in Gnosis', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0xe4cfe667781ffa66dfcf4eb196e5fb7d13dc0183908d8c1dcbd256aba8a2a894 on Gnosis. See:
    // * https://gnosisscan.io/tx/0xe4cfe667781ffa66dfcf4eb196e5fb7d13dc0183908d8c1dcbd256aba8a2a894
    // * https://beacon.gnosischain.com/slot/8974746
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0x396276b42450088463d643d7c9aa371860c0579916b3a6281583c0db135c0305', // Topic #1
      chain: 100,
      contract: '0x9ecbfd880533db0af722d5fa3c01a1fc48bd0e31',
      slot: 8974746n,
      headerRoot: '0x32cacc0bcd1ec1c5858ac3d5eea124549cde96504b6aa37d5aff3b6dfeec6567', // "Block Root" value
    };

    const eventProofData: EncodeLightClientProofParams = {
      srcSlot: event.slot,
      txSlot: event.slot,
      receiptsRootProof: [
        '0x9930cacdb0b102cae80549940fe31cc532222807e9f462c91304589b012dc2cd',
        '0x09459cdaf241b8564ce8eb1281229306d6689154ffea8eb61b4f34d41737ea04',
        '0x9c661c1be76c64a6e5d51d35e4d4318e893eebfd0d07fb8c3bda7409da42e580',
        '0x774af8f0986f4ede71ee4bd8878b434ae107e5ec1731fa03acccdc119ebef300',
        '0x0000000000000000000000000000000000000000000000000000000000000000',
        '0xf5a5fd42d16a20302798ef6ed309979b43003d2320d9f0e8ea9831a92759fb4b',
        '0xdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71',
        '0x15e5982cbc2e697ea89bd9658b342546c1921799f35f91879ef0fa29db595d93',
        '0xbdaad1d8403af14dc4a138f4198e7354e5ac61596b690819ece4fa9c06195b46',
        '0xcc5bf9fbab1cd87055d714e5442527cc1800017bcdfa0f45a1e71d77c33b8901',
        '0x18dc8e97435226465e02699f94e5fdebe58bad0a3f4abc3bd5cf52d5c5153206',
        '0xb781c8b8de3cb4550de204b5fcbe4284821532e1ecef9636b053a1cc2ebf304a',
      ],
      receiptsRoot: '0x16e671247b178ba4cecef5b6ce51a8fe8817b943d4eb119b75b8376256e4b5b3',
      receiptProof: [
        '0xf851a002c13ba34aab2f5b0ebaedfd91b5ae1da8bdbee2cd65012d23398ffdef1262df80808080808080a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd8080808080808080',
        '0xf8d180a00122200915daa9c5fc199b145d06dd0f269fc064cb2c3dbb15fa068ffb0d0f1ba0a23da54d9549567b4df85e00a2c96675f59c908a01b06bc8719f28059dad2571a0e31152f97bfdc9e47351ad8f19a573c03f17d8248c493aa8938ccccd138eb998a0011e8dc760b5525940bea74f055ff42954948cf9d6f4930761481965798dba27a0eed0f2f22851c2229d5b1691e537b3f570cc3792fa93905cddb554ecb4da007da01b6c18c3e1c3d876d1e50d626a9a754dec29e21e204075570107efac3a304f5380808080808080808080',
        '0xf9020a20b90206f90203018310ac80bf8f9f89b94ddafbb505ad214d7b80b1f830fccc89b60fb7a83f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000fe20a6f6493a25fb0e02206d269ca1a4a01d26c2a00000000000000000000000000000000000000000000000000000000000017293f85a949ecbfd880533db0af722d5fa3c01a1fc48bd0e31f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0396276b42450088463d643d7c9aa371860c0579916b3a6281583c0db135c030580',
      ],
      txIndexRLPEncoded: '0x06',
      logIndex: 1n,
    };
    const eventProof = await encodeLightClientProof(eventProofData);

    const expectedEventProof = '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000088f19a000000000000000000000000000000000000000000000000000000000088f19a00000000000000000000000000000000000000000000000000000000000000e016e671247b178ba4cecef5b6ce51a8fe8817b943d4eb119b75b8376256e4b5b3000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000006c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000c9930cacdb0b102cae80549940fe31cc532222807e9f462c91304589b012dc2cd09459cdaf241b8564ce8eb1281229306d6689154ffea8eb61b4f34d41737ea049c661c1be76c64a6e5d51d35e4d4318e893eebfd0d07fb8c3bda7409da42e580774af8f0986f4ede71ee4bd8878b434ae107e5ec1731fa03acccdc119ebef3000000000000000000000000000000000000000000000000000000000000000000f5a5fd42d16a20302798ef6ed309979b43003d2320d9f0e8ea9831a92759fb4bdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d7115e5982cbc2e697ea89bd9658b342546c1921799f35f91879ef0fa29db595d93bdaad1d8403af14dc4a138f4198e7354e5ac61596b690819ece4fa9c06195b46cc5bf9fbab1cd87055d714e5442527cc1800017bcdfa0f45a1e71d77c33b890118dc8e97435226465e02699f94e5fdebe58bad0a3f4abc3bd5cf52d5c5153206b781c8b8de3cb4550de204b5fcbe4284821532e1ecef9636b053a1cc2ebf304a0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000053f851a002c13ba34aab2f5b0ebaedfd91b5ae1da8bdbee2cd65012d23398ffdef1262df80808080808080a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd80808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d3f8d180a00122200915daa9c5fc199b145d06dd0f269fc064cb2c3dbb15fa068ffb0d0f1ba0a23da54d9549567b4df85e00a2c96675f59c908a01b06bc8719f28059dad2571a0e31152f97bfdc9e47351ad8f19a573c03f17d8248c493aa8938ccccd138eb998a0011e8dc760b5525940bea74f055ff42954948cf9d6f4930761481965798dba27a0eed0f2f22851c2229d5b1691e537b3f570cc3792fa93905cddb554ecb4da007da01b6c18c3e1c3d876d1e50d626a9a754dec29e21e204075570107efac3a304f538080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020df9020a20b90206f90203018310ac80bf8f9f89b94ddafbb505ad214d7b80b1f830fccc89b60fb7a83f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000fe20a6f6493a25fb0e02206d269ca1a4a01d26c2a00000000000000000000000000000000000000000000000000000000000017293f85a949ecbfd880533db0af722d5fa3c01a1fc48bd0e31f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0396276b42450088463d643d7c9aa371860c0579916b3a6281583c0db135c0305800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000';
    expect(eventProof).to.be.equal(expectedEventProof);

    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);

    // Ensure reverts if inconsistent
    await expectRevert(
      proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof),
      { customError: 'LightClientInconsistent()' },
    );

    await lightClientMock.setConsistent();

    // Ensure reverts if not timestamp
    await expectRevert(
      proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof),
      { customError: `NoSlotTimestamp(${event.slot})` },
    );

    await lightClientMock.setTimestamp(event.slot);

    // Ensure reverts if too early
    await expectRevert(
      proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof),
      { customError: `SlotNotSettled(${event.slot}, [0-9]+, ${MIN_LIGHT_CLIENT_DELAY})` },
    );

    // Wait min client delay
    await waitMinLightClientDelay();

    // Ensure reverts if no header
    await expectRevert(
      proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof),
      { customError: `NoHeaderRoot(${event.slot})` },
    );

    await lightClientMock.setHeader(event.slot, event.headerRoot);

    // Validate proof
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (gnosis send)', lastGasUsed);
  });

  it('Should verify hash event proof in Gnosis with different src/tx slots', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0xe4cfe667781ffa66dfcf4eb196e5fb7d13dc0183908d8c1dcbd256aba8a2a894 on Gnosis. See:
    // * https://gnosisscan.io/tx/
    // * https://beacon.gnosischain.com/slot/8974752 (src)
    // * https://beacon.gnosischain.com/slot/8974746 (tx)
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0x396276b42450088463d643d7c9aa371860c0579916b3a6281583c0db135c0305', // Topic #1
      chain: 100,
      contract: '0x9ecbfd880533db0af722d5fa3c01a1fc48bd0e31',
      srcSlot: 8974752n,
      txSlot: 8974746n,
      headerRoot: '0xfc9cc666ba57776ab750fea36d151ac61cc0a875264bfb3b8adaafec3a97cfb2', // "Block Root" value
    };

    const eventProof = '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000088f1a0000000000000000000000000000000000000000000000000000000000088f19a00000000000000000000000000000000000000000000000000000000000000e016e671247b178ba4cecef5b6ce51a8fe8817b943d4eb119b75b8376256e4b5b300000000000000000000000000000000000000000000000000000000000004c000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001e9930cacdb0b102cae80549940fe31cc532222807e9f462c91304589b012dc2cd09459cdaf241b8564ce8eb1281229306d6689154ffea8eb61b4f34d41737ea049c661c1be76c64a6e5d51d35e4d4318e893eebfd0d07fb8c3bda7409da42e580774af8f0986f4ede71ee4bd8878b434ae107e5ec1731fa03acccdc119ebef3000000000000000000000000000000000000000000000000000000000000000000f5a5fd42d16a20302798ef6ed309979b43003d2320d9f0e8ea9831a92759fb4bdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d7115e5982cbc2e697ea89bd9658b342546c1921799f35f91879ef0fa29db595d93bdaad1d8403af14dc4a138f4198e7354e5ac61596b690819ece4fa9c06195b46e3b426eed8b9092879c2c011aa540ffd9788039fe36ccf8ea05e5d4ba2ec1316c103597c70e5800c0b1725bdbd0973cff8e45730b6b79ec301abe73614893b7a3ed67de7afcbdde8168858165032329cfe51b8574869202e447d51789c4facc565a3e091ecc4d913bcba2f925807afefd47703ee75bbe2740ceea5aa34b484767e7fa96a81e827c87442bd8d88e84fdb1c4ec92637cf41d53fb33bb0df9dce567f40dfefc5453f86dd10d6878ccaab48c5c8e02ecb685ac0b841b3c1846d18a2753e781b9705684d738d7a144ebb4ca8cbd704ee2646507366c6fd323e5b2ac03ad3ed6b8a5c4d55c8a0e2f83bede74660999ab4357fbf7520ee80409fed0d23cb1b0f1bec457a5db819aed86d6ed32b724ae4047e3a9105f66a551f2b590a38960015834d5c2ff38e46b519478230ae4e679b7863183151c7340a6e203e485bf61ec2772c050d157108c0bc62e80d5ebf25aecacd718ea7db00bf8109862c0c0769764b58d2b980f42b3e8983f3e8e19a957346151b53967b33b93549ec3855cbe0271a53cf817e60ee4fc89cb87bcedcf6302115dfe7ce63ff4d88a7de2c68af1d150fd65aea6c2d3efa6714af5c862f91491627723d09a67aaec90aadce24f5eb4d5182c02379985c88690e0f8d78113c7935ed496827f91d41fc9841f0a68a8a21177f03c8ed7ea4d5d8f365ef90f2e96ac81936ad8d3b9f291271564d6ccd5102f183d374730b9e2dba5f4e9d9daa040c42195c88404a42beaf67ab30feb32f80be2cb03690aee386e8dcb4628fdad048f20a190fbd8dacdaa1031843bcb304cf886040a179e9c0e3294d9fda1d4fe3834e95e59c87183c5839d6951e5d2a06e4ca08603a6c8fc68037a662bae020373b4728c3bcb3301a3299ce8656911173f99b77a17f48fe6ce6f47e0090195fb3d523484294c712739914ae95ec7a0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000053f851a002c13ba34aab2f5b0ebaedfd91b5ae1da8bdbee2cd65012d23398ffdef1262df80808080808080a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd80808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d3f8d180a00122200915daa9c5fc199b145d06dd0f269fc064cb2c3dbb15fa068ffb0d0f1ba0a23da54d9549567b4df85e00a2c96675f59c908a01b06bc8719f28059dad2571a0e31152f97bfdc9e47351ad8f19a573c03f17d8248c493aa8938ccccd138eb998a0011e8dc760b5525940bea74f055ff42954948cf9d6f4930761481965798dba27a0eed0f2f22851c2229d5b1691e537b3f570cc3792fa93905cddb554ecb4da007da01b6c18c3e1c3d876d1e50d626a9a754dec29e21e204075570107efac3a304f538080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020df9020a20b90206f90203018310ac80bf8f9f89b94ddafbb505ad214d7b80b1f830fccc89b60fb7a83f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000fe20a6f6493a25fb0e02206d269ca1a4a01d26c2a00000000000000000000000000000000000000000000000000000000000017293f85a949ecbfd880533db0af722d5fa3c01a1fc48bd0e31f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0396276b42450088463d643d7c9aa371860c0579916b3a6281583c0db135c0305800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000';

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (gnosis receive, src != tx)', lastGasUsed);
  });

  it('Should verify hash event proof in Goerli', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0xcf6b7e9d2ae0a27c329c4dd567a86a550a77fee56bbe016d881bb255ee015b52 on Goerli. See:
    // * https://goerli.etherscan.io/tx/0xcf6b7e9d2ae0a27c329c4dd567a86a550a77fee56bbe016d881bb255ee015b52
    // * https://goerli.beaconcha.in/slot/5614754
    const event = {
      signature: '0xebd49f22611487a9df09f5dfbcabfa4aa714bf6c3859fa6d901fba02e205f71f', // Topic #0
      hash: '0x00514ce10c7ffe2bcf367cd5cdd433fa68002331b04c982476af61a194926af5', // Topic #1
      chain: 5,
      contract: '0xefa513be7c0e9993a526e93ac05bc563634d127d',
      slot: 5614754n,
      headerRoot: '0xfd8d439c55d841b3f3287b7c3651941e2f887fab1a176e59b1d4f8f7b3c389ae', // "Block Root" value
    };

    const eventProofData: EncodeLightClientProofParams = {
      srcSlot: event.slot,
      txSlot: event.slot,
      receiptsRootProof: [
        '0x7eaddb0e2f48c2b76e3c60b8c95e07f0332402564d5c98dde06900be52b83bd4',
        '0x4ec7be0aa24d823a8ff6c6384663cf1bbb8d43e19fc1376bf7846061ac4f2268',
        '0x8e5e2696c5da33e20e7da7b84ecb96a7665d8c817028ee32f257c68ddd271d0f',
        '0xad89cb362bbf2d4058428a544d9b490109766ce9dab019e5fbf81a279abb27f4',
        '0x6b77500000000000000000000000000000000000000000000000000000000000',
        '0x3a6837382b06ae52003ab315624b0a8d91f6811f4889cbb69106bfd7a7708623',
        '0xdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71',
        '0xe05d8e7fc0601261811d2c98d524407daaee22df04bb7d7d5d0fc0e7699089fc',
        '0xfc9e6085c8d81e22ac1116231a54b6295902d514ec9ca9ad7d060d578a044674',
        '0x7cad18f23aa56ca2cee9b494c567f5a45fc012f1f9ea72aa2a9e6847b40a48c2',
        '0x37f284d1bb063eabe5f7102533d768d8931be7253ed0ff3f07de5563ad8f2289',
        '0xc80b19674ce27467c3a17d1edb8d99d28f68c825de6a05c5511ad603be7d630a',
      ],
      receiptsRoot: '0x282b6290c2a1e58c1f69c74f9cfa9dcf056af505c544bd634387569e47e0f350',
      receiptProof: [
        '0xf8b1a0578ca3b2ee38697d20721ec338486fca21c5765699ee701bd3c933adf3555d85a0e9fed1f3f6551bdba95c1f110657eb95cb42bedd9fe61db71a1f4fd2df3a56b5a0241e99b0de8175b459e49d3269dffe01c6e1b93394f0f846d646a454c8e40a89a0c118d212c118d34ce1c02e190284d052df18edb452580dfd84ab53e66643b44e80808080a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd8080808080808080',
        '0xf901b1a0bf4187da88b1202308bbda8cf26281319b32c135faad81408e0101e100cd75aaa07ecd85cc9c80af0e12944989cbb1e5270c345b617c5ccc5e5696c519c5b8250fa07b0357ea6601d61846bcf57d9fc369d8508b246bef1c1c6bbc8b2aa7d0f2fb6ea0d6a722d1a356befd88c279701f48a35c75a05884572a07bfa10006a0ed102d31a0a74eddc66e9a8c8e2efe172e675d9a9cd37f7c109ea0d91f4cd862d138f54573a0de80dde13003c3827e2baac20e3875a6bf582644a55a298cfe7fa3e97ded41b7a086ee70d50a8082211633be90a87ed92fd8db75d12f5eb65111f5559bd8ddbba3a0991900270d38ad83b33b95cb78d730a159fbd2d7dc76d366397665c7a9dc582da09bc31629a7d39bbb6d62a2b691ea5b6a930643c91a665f3a025ecbe2b921d738a0a9ae6d1f4e5e5671185e1a7bed66e11e94528f9cdce97d3eeb64502b3f344e31a0501345a77da3580daaa04076bc5f41d8aa5af31fa9461ba399cc623ccee66783a02485eba6341c2d022d44a7e6628e2cd8f54ed7c2365f72639a6c88832b4bce18a0f2161a9f3877e2d3683235f342bf99e079711d1bab10331c5a8f1f385a79c86280808080',
        '0xf9020b20b9020702f902030183825d1bb9010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000020000000000000000000400000000000008080040000000000020400000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000004000000000000000000020000000000000000000000040000000000000000000000000400000000000000004002000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000080f8f9f89b94b4fbf271143f4fbf7b91a5ded31805e42b2208d6f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000000000000000000000000000000001c6bf52634000f85a94efa513be7c0e9993a526e93ac05bc563634d127df842a0ebd49f22611487a9df09f5dfbcabfa4aa714bf6c3859fa6d901fba02e205f71fa000514ce10c7ffe2bcf367cd5cdd433fa68002331b04c982476af61a194926af580',
      ],
      txIndexRLPEncoded: '0x38',
      logIndex: 1n,
    };
    const eventProof = await encodeLightClientProof(eventProofData);

    const expectedEventProof = '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000055aca2000000000000000000000000000000000000000000000000000000000055aca200000000000000000000000000000000000000000000000000000000000000e0282b6290c2a1e58c1f69c74f9cfa9dcf056af505c544bd634387569e47e0f350000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000c7eaddb0e2f48c2b76e3c60b8c95e07f0332402564d5c98dde06900be52b83bd44ec7be0aa24d823a8ff6c6384663cf1bbb8d43e19fc1376bf7846061ac4f22688e5e2696c5da33e20e7da7b84ecb96a7665d8c817028ee32f257c68ddd271d0fad89cb362bbf2d4058428a544d9b490109766ce9dab019e5fbf81a279abb27f46b775000000000000000000000000000000000000000000000000000000000003a6837382b06ae52003ab315624b0a8d91f6811f4889cbb69106bfd7a7708623db56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71e05d8e7fc0601261811d2c98d524407daaee22df04bb7d7d5d0fc0e7699089fcfc9e6085c8d81e22ac1116231a54b6295902d514ec9ca9ad7d060d578a0446747cad18f23aa56ca2cee9b494c567f5a45fc012f1f9ea72aa2a9e6847b40a48c237f284d1bb063eabe5f7102533d768d8931be7253ed0ff3f07de5563ad8f2289c80b19674ce27467c3a17d1edb8d99d28f68c825de6a05c5511ad603be7d630a000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000b3f8b1a0578ca3b2ee38697d20721ec338486fca21c5765699ee701bd3c933adf3555d85a0e9fed1f3f6551bdba95c1f110657eb95cb42bedd9fe61db71a1f4fd2df3a56b5a0241e99b0de8175b459e49d3269dffe01c6e1b93394f0f846d646a454c8e40a89a0c118d212c118d34ce1c02e190284d052df18edb452580dfd84ab53e66643b44e80808080a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd80808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b4f901b1a0bf4187da88b1202308bbda8cf26281319b32c135faad81408e0101e100cd75aaa07ecd85cc9c80af0e12944989cbb1e5270c345b617c5ccc5e5696c519c5b8250fa07b0357ea6601d61846bcf57d9fc369d8508b246bef1c1c6bbc8b2aa7d0f2fb6ea0d6a722d1a356befd88c279701f48a35c75a05884572a07bfa10006a0ed102d31a0a74eddc66e9a8c8e2efe172e675d9a9cd37f7c109ea0d91f4cd862d138f54573a0de80dde13003c3827e2baac20e3875a6bf582644a55a298cfe7fa3e97ded41b7a086ee70d50a8082211633be90a87ed92fd8db75d12f5eb65111f5559bd8ddbba3a0991900270d38ad83b33b95cb78d730a159fbd2d7dc76d366397665c7a9dc582da09bc31629a7d39bbb6d62a2b691ea5b6a930643c91a665f3a025ecbe2b921d738a0a9ae6d1f4e5e5671185e1a7bed66e11e94528f9cdce97d3eeb64502b3f344e31a0501345a77da3580daaa04076bc5f41d8aa5af31fa9461ba399cc623ccee66783a02485eba6341c2d022d44a7e6628e2cd8f54ed7c2365f72639a6c88832b4bce18a0f2161a9f3877e2d3683235f342bf99e079711d1bab10331c5a8f1f385a79c86280808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000020ef9020b20b9020702f902030183825d1bbf8f9f89b94b4fbf271143f4fbf7b91a5ded31805e42b2208d6f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000000000000000000000000000000001c6bf52634000f85a94efa513be7c0e9993a526e93ac05bc563634d127df842a0ebd49f22611487a9df09f5dfbcabfa4aa714bf6c3859fa6d901fba02e205f71fa000514ce10c7ffe2bcf367cd5cdd433fa68002331b04c982476af61a194926af58000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013800000000000000000000000000000000000000000000000000000000000000';
    expect(eventProof).to.be.equal(expectedEventProof);

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.slot, event.headerRoot);
    await lightClientMock.setTimestamp(event.slot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (goerli receive)', lastGasUsed);
  });

  it('Should verify hash event proof in Goerli with different src/tx slots', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0x7b2574d7ea0d15f9769c4191165c88edfc1e0ffb733c3455c0a80c024016e918 on Goerli. See:
    // * https://goerli.etherscan.io/tx/0x7b2574d7ea0d15f9769c4191165c88edfc1e0ffb733c3455c0a80c024016e918
    // * https://goerli.beaconcha.in/slot/6010699 (tx)
    // * https://goerli.beaconcha.in/slot/6010720 (src)
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0x10db6deb0949fb3f2a952f354c64f9a6c8db521d6f79e559c85032319753ffcb', // Topic #1
      chain: 5,
      contract: '0x07c8e78bfc25aabadc7c0bade1ef4ee5e3d225ec',
      srcSlot: 6010720n,
      txSlot: 6010699n,
      headerRoot: '0xabaa61afdf866d5f78f16e8182f883c0eb62eebe3bfaae992dab0446db906a15', // "Block Root" value (src)
    };

    const eventProofData: EncodeLightClientProofParams = {
      srcSlot: event.srcSlot,
      txSlot: event.txSlot,
      receiptsRootProof: [
        '0x38b2aaffd504295cdf0df747ecbb105f282bddf502cd1e974aad9f1a9a248b2c',
        '0x1ed6c829df130164ad2585871b7c568a5f92a75bdfa7e8463921eb30e0d0a2d5',
        '0x53d84801630852469205de96094cb0931cfba847dcfdbaa0c3378af678867528',
        '0x348051b36830ccc80cff04a3c985cffe932d1b59fc4720508fd2d9d3de7cff1b',
        '0x54b49c0000000000000000000000000000000000000000000000000000000000',
        '0xe45676e6a14c418d42762d26ddb775796469585e14ef50d058c23790d2aee9eb',
        '0xdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71',
        '0x46cbb2f90e104e0f6bdaccae0d400861007280e305393809fc0d52a7d83049f2',
        '0xe15d59accc6fbf2071cac602e277f8d4a6eb5df9df1d050d094f6fb3925dcd50',
        '0x62a1feb240d37da1918dc1651cbb704055f31bd84fa6dcbafa1190a6692e50fa',
        '0xa60a5a0839136e67587e17e7cb816abe6769e9e12bd8bb170673c5e92effb690',
        '0x0f3a2f1ddecf5e3ed2f970b7e60d1c5fc938fadb4713b55123a8aae6f19a4060',
        '0xcc073071d38bf863b96ccd377caa25f6f2750364bc5caa38f18f783d20a084ac',
        '0x32933ac767e7e2b135cf1c4623e59650803de0101bc7400037c70df63ee876a0',
        '0x399f2c9199669121b5ae2fc725241498d4c2f277488fba335d6bfec872c023ad',
        '0x32192465ff12f78522e3b56ab8ff2bc9bd2d5b56d8b5d8e71ec0a905184b5ae2',
        '0xfd4058fa58198fc26da407c74c1a905cc68890188216570508c2c8fb51b489fc',
        '0xbbdbf371b7c9c8f208de1cc9d086bd994129f09f06be8dfabacaae01b42cbf94',
        '0xdec06c3bc493d7d7b79ddbad3debc5d30691ef629d551c7bd18cea14db1f68e0',
        '0x4e0a996b59591582574d1b5394a803762512ae914a11dbebaf536d47a09fcf12',
        '0x3af4b07ad107f89b875710a15169b9f373e9e475d02579b33523a4895f649c8c',
        '0x6d3b90fa9c23c0dd0c2157b72f50c9f12524ccd845b77a88eb0aa5c61d048a0b',
        '0x728a6662f589a03cef311c85fdec9a575260292421f3a365e2f50b80bac80153',
        '0x4a07292f303186496b69f378132fb3e7042f6e94df5c5f4f3bac82b1e23204c0',
        '0x236418289af18c1bb449de3bf3c0c5eaa82dc8a347e0a3839a9e171131672893',
        '0xb7752895a8a790374ab5cca5b088a769ff6ac584868e5473f54ef8728f774cbb',
        '0xc81bb32a157ffc4eb39ea7a9dabfd95b3b25fd3c80c1d812f71d69c79be0a3a9',
        '0xab852c55d3c0223fd68b7d680c97a888b794836f59339dd660c4e0b1a30c608f',
        '0xcb81d9f198322264cadac7a2e0c2357689d51463625db382748271be698c225b',
        '0x9796d8e425c0f5643a3eb4d3e7847e1c2f32027dd83f206e861a25b67bb6ae99',
      ],
      receiptsRoot: '0x68934eb89a33e2eb603e8de1c67fd84f11943e39df440ba356a7f89e342bc3d6',
      receiptProof: [
        '0xf90131a08f5e241cde41889acf2013b2912f859dc1ab54f3a714cf10b2026f0e0cd70f85a0114a3f07e8ed07a1ec3af6ba0f7102ab8c5c82ce37bbf41eff8d8f5a57ccaf16a0f12416b5fba5c481ace07e3213e036c879827c198b58614aac5a4b0c79477174a02308458db867bbabfeb285d5e928676175d9c7df3195c2892e93ab71373c872ea048703472ab75e2926b204664eb1fb69bdac7d9cc0c8bb9e3491d9cf2dc992162a00903c465a01fa40cbaa25f98b48f29db7af41a3e715adffed37e50bd0dac0df4a044d8bf17751d3090bc0f1ab66cbeb2b5576950dbb0115f49202021d89c941595a0082572fc67b1e82285265527847a2720850caea8c32fe12aa00b0bdb0366e582a0e745e69ad190e7fd4e0620effc02e11e68b56832e10bf112a2ba8b5a8ba13ce38080808080808080',
        '0xf851a0b00d45a578d4fde1a95af3d09c07d27f9b69353b261c6779dabcbabf22afad7fa0fe1fb13e51e3d1fff8674b0877920fcc6acc491277bdc2068787337f0642d993808080808080808080808080808080',
        '0xf8518080808080808080a08bb82221c2ba597d877d3d2b6fa92598521276bebe6d512a094b63205deacae3a062624fda4a38bbf8a656bb7e5ff7e8d07281b71dcc7c4aeb613943f47572df1780808080808080',
        '0xf90211a0f48eb5baa25d17adb9c4be01b840e6b7550cd47d3b4f74691d6d42d3e9148a51a000dc6d5e9d4358cac79a691a33932280809217d6d9993501867accc462b57422a027a79d02a64d21cbd584e4974bb89c89fde64ced960c8bd56cf3de90e32836f6a08fac6bb771caa2fd24baa661bbccd259a88055b588743490abc460335be0f20aa039046e037fdd908c7caa5dce586be8db0ab37020fcaaadba66a6c75c2e88be7da032bef56b465b7d05880071199440473115666b3561f74bb4c4c90acae6111884a0f8b49a51ded4ecfc5c5f4af0bb59b0231a5ce39918f7f1b93ec7226c77a74081a0717ebc403b1fc218027283c198ac6a9ea5995fe1271d07f8633991c571180a0da0571fd1a676c7b697e57a24d0e2d0bda5904982e5a759cda652ce87664b6f8879a06a9c8991c850f069920bb8f45f62594227d67bfaebd1f4a6d055588a7dae688ba03c14e573ca2540285fb89d324d8dbe31d482bf5b16588c43b6608473a7db34d6a099d0af9e0be6263c91cda67ef0934a380da7b9d885acb91025239b613dd2642aa0a9a5595ed91f665ba33254b7d542a8d46651ea9b5778ca7f06ec76ec5189e042a0230a40b798a21a5a2d3e6bff45c832acf94a8e96a5fcd94ca01bab9952bb4867a0b329aec83ba0b30b1e162651e6c49bb766c0f37e793c7b6965b5adf02879b3c8a0bed43ce82d028ded93dbfc7960f3890f343ee83e7dc17651879eea714b374f6280',
        '0xf9020c20b9020802f9020401840155d6a3bf8f9f89b947a5c16f8055034a723376f680cf6666cad80b864f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000000000000000000000000000000000000001942abaf85a9407c8e78bfc25aabadc7c0bade1ef4ee5e3d225ecf842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a010db6deb0949fb3f2a952f354c64f9a6c8db521d6f79e559c85032319753ffcb80',
      ],
      txIndexRLPEncoded: '0x8184',
      logIndex: 1n,
    };
    const eventProof = await encodeLightClientProof(eventProofData);

    const expectedEventProof = '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000005bb76000000000000000000000000000000000000000000000000000000000005bb74b00000000000000000000000000000000000000000000000000000000000000e068934eb89a33e2eb603e8de1c67fd84f11943e39df440ba356a7f89e342bc3d600000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000c600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001e38b2aaffd504295cdf0df747ecbb105f282bddf502cd1e974aad9f1a9a248b2c1ed6c829df130164ad2585871b7c568a5f92a75bdfa7e8463921eb30e0d0a2d553d84801630852469205de96094cb0931cfba847dcfdbaa0c3378af678867528348051b36830ccc80cff04a3c985cffe932d1b59fc4720508fd2d9d3de7cff1b54b49c0000000000000000000000000000000000000000000000000000000000e45676e6a14c418d42762d26ddb775796469585e14ef50d058c23790d2aee9ebdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d7146cbb2f90e104e0f6bdaccae0d400861007280e305393809fc0d52a7d83049f2e15d59accc6fbf2071cac602e277f8d4a6eb5df9df1d050d094f6fb3925dcd5062a1feb240d37da1918dc1651cbb704055f31bd84fa6dcbafa1190a6692e50faa60a5a0839136e67587e17e7cb816abe6769e9e12bd8bb170673c5e92effb6900f3a2f1ddecf5e3ed2f970b7e60d1c5fc938fadb4713b55123a8aae6f19a4060cc073071d38bf863b96ccd377caa25f6f2750364bc5caa38f18f783d20a084ac32933ac767e7e2b135cf1c4623e59650803de0101bc7400037c70df63ee876a0399f2c9199669121b5ae2fc725241498d4c2f277488fba335d6bfec872c023ad32192465ff12f78522e3b56ab8ff2bc9bd2d5b56d8b5d8e71ec0a905184b5ae2fd4058fa58198fc26da407c74c1a905cc68890188216570508c2c8fb51b489fcbbdbf371b7c9c8f208de1cc9d086bd994129f09f06be8dfabacaae01b42cbf94dec06c3bc493d7d7b79ddbad3debc5d30691ef629d551c7bd18cea14db1f68e04e0a996b59591582574d1b5394a803762512ae914a11dbebaf536d47a09fcf123af4b07ad107f89b875710a15169b9f373e9e475d02579b33523a4895f649c8c6d3b90fa9c23c0dd0c2157b72f50c9f12524ccd845b77a88eb0aa5c61d048a0b728a6662f589a03cef311c85fdec9a575260292421f3a365e2f50b80bac801534a07292f303186496b69f378132fb3e7042f6e94df5c5f4f3bac82b1e23204c0236418289af18c1bb449de3bf3c0c5eaa82dc8a347e0a3839a9e171131672893b7752895a8a790374ab5cca5b088a769ff6ac584868e5473f54ef8728f774cbbc81bb32a157ffc4eb39ea7a9dabfd95b3b25fd3c80c1d812f71d69c79be0a3a9ab852c55d3c0223fd68b7d680c97a888b794836f59339dd660c4e0b1a30c608fcb81d9f198322264cadac7a2e0c2357689d51463625db382748271be698c225b9796d8e425c0f5643a3eb4d3e7847e1c2f32027dd83f206e861a25b67bb6ae99000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000134f90131a08f5e241cde41889acf2013b2912f859dc1ab54f3a714cf10b2026f0e0cd70f85a0114a3f07e8ed07a1ec3af6ba0f7102ab8c5c82ce37bbf41eff8d8f5a57ccaf16a0f12416b5fba5c481ace07e3213e036c879827c198b58614aac5a4b0c79477174a02308458db867bbabfeb285d5e928676175d9c7df3195c2892e93ab71373c872ea048703472ab75e2926b204664eb1fb69bdac7d9cc0c8bb9e3491d9cf2dc992162a00903c465a01fa40cbaa25f98b48f29db7af41a3e715adffed37e50bd0dac0df4a044d8bf17751d3090bc0f1ab66cbeb2b5576950dbb0115f49202021d89c941595a0082572fc67b1e82285265527847a2720850caea8c32fe12aa00b0bdb0366e582a0e745e69ad190e7fd4e0620effc02e11e68b56832e10bf112a2ba8b5a8ba13ce380808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000053f851a0b00d45a578d4fde1a95af3d09c07d27f9b69353b261c6779dabcbabf22afad7fa0fe1fb13e51e3d1fff8674b0877920fcc6acc491277bdc2068787337f0642d993808080808080808080808080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053f8518080808080808080a08bb82221c2ba597d877d3d2b6fa92598521276bebe6d512a094b63205deacae3a062624fda4a38bbf8a656bb7e5ff7e8d07281b71dcc7c4aeb613943f47572df1780808080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000214f90211a0f48eb5baa25d17adb9c4be01b840e6b7550cd47d3b4f74691d6d42d3e9148a51a000dc6d5e9d4358cac79a691a33932280809217d6d9993501867accc462b57422a027a79d02a64d21cbd584e4974bb89c89fde64ced960c8bd56cf3de90e32836f6a08fac6bb771caa2fd24baa661bbccd259a88055b588743490abc460335be0f20aa039046e037fdd908c7caa5dce586be8db0ab37020fcaaadba66a6c75c2e88be7da032bef56b465b7d05880071199440473115666b3561f74bb4c4c90acae6111884a0f8b49a51ded4ecfc5c5f4af0bb59b0231a5ce39918f7f1b93ec7226c77a74081a0717ebc403b1fc218027283c198ac6a9ea5995fe1271d07f8633991c571180a0da0571fd1a676c7b697e57a24d0e2d0bda5904982e5a759cda652ce87664b6f8879a06a9c8991c850f069920bb8f45f62594227d67bfaebd1f4a6d055588a7dae688ba03c14e573ca2540285fb89d324d8dbe31d482bf5b16588c43b6608473a7db34d6a099d0af9e0be6263c91cda67ef0934a380da7b9d885acb91025239b613dd2642aa0a9a5595ed91f665ba33254b7d542a8d46651ea9b5778ca7f06ec76ec5189e042a0230a40b798a21a5a2d3e6bff45c832acf94a8e96a5fcd94ca01bab9952bb4867a0b329aec83ba0b30b1e162651e6c49bb766c0f37e793c7b6965b5adf02879b3c8a0bed43ce82d028ded93dbfc7960f3890f343ee83e7dc17651879eea714b374f6280000000000000000000000000000000000000000000000000000000000000000000000000000000000000020ff9020c20b9020802f9020401840155d6a3bf8f9f89b947a5c16f8055034a723376f680cf6666cad80b864f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000000000000000000000000000000000000001942abaf85a9407c8e78bfc25aabadc7c0bade1ef4ee5e3d225ecf842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a010db6deb0949fb3f2a952f354c64f9a6c8db521d6f79e559c85032319753ffcb80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028184000000000000000000000000000000000000000000000000000000000000';
    expect(eventProof).to.be.equal(expectedEventProof);

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (goerli send, src != tx)', lastGasUsed);
  });

  it('Should verify hash event proof in Chiado with different src/tx slots', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0xa62aa6019dc4421500af557210ea58d0b5cac1a59d9cd63c5e0670302dba140b on Chiado. See:
    // * https://gnosis-chiado.blockscout.com/tx/0xa62aa6019dc4421500af557210ea58d0b5cac1a59d9cd63c5e0670302dba140b
    // * https://beacon.chiadochain.net/slot/4875530 (tx)
    // * https://beacon.chiadochain.net/slot/4875536 (src)
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0xa6ecbdc4a2a2a761900b21c8d608f378e2cc901c29ff1aff261fa4e1987faef1', // Topic #1
      chain: 10200,
      contract: '0x7ed67834b6f3db4e5a68c6bab855836d63cb602f',
      srcSlot: 4875536n,
      txSlot: 4875530n,
      headerRoot: '0xd927afb3139cbda5bc2f44de7f7fc83ea4649cb65e096200646c0d804fb75d5d', // "Block Root" value (src)
    };

    const eventProofData: EncodeLightClientProofParams = {
      srcSlot: event.srcSlot,
      txSlot: event.txSlot,
      receiptsRootProof: [
        '0xae2a5b4979a99121cb2aafa09907d98695e3c4ca2941f31d0cdad3ea264b594f',
        '0x5c2b13aa6a7f8c1ed44e497980472037c198dfcbf35896cb2d74e084ecd6704b',
        '0x3284c8d95b658f289434609b979826e2063929d1767f7be35ab2368ace350b1c',
        '0x066d4bbd613d12e71272ab7abb3442e7edec1b179fac969c79841158cd3881be',
        '0x702e750000000000000000000000000000000000000000000000000000000000',
        '0xd1b1a1d96b1538ac3d2f96d68e29524b719ad9ff56917002d1b6063718ed4dea',
        '0xdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71',
        '0x34f39c738f520e4f90d96824777cb27d249ef982e88df4df160ac545c24cc1f7',
        '0x4692d2a5188a9f8c0ce026d29b30df2d6c4ffe242ef291944e28d8818d097ce3',
        '0x5307f345d5658cd528315544385387960bb417543134d7e6785fb76613f89ef4',
        '0xced5b77ae13a02b4ade242ceac410675e5925b46620ce32e212309c5ba03fddf',
        '0x4c6fc5d3c98dc83cc6fb4fbb96afc5a59ff920bb446b412e221ca26f150a13aa',
        '0x48fcb8608cc9beceffaeff27c4a7730405b150c1bc866f4aadfb20184490b988',
        '0x2ed5afce05599433e3f44c721f0b4bd7d56cdcf6c16ac50ebf0484743bb2c96e',
        '0x22a065822035fd5ffe222a0882401c34e1eb622d58db141345cf0189aa97a557',
        '0x909d1f729215f7afa137bf35023a63e12ef5a115447ef3b259dccd3521e7aa0d',
        '0x33c12227b77c81879789dc3876aee1ac42219dd5f95115f8db569805e7f77265',
        '0x1a3d9d7908e91546341415d1567a0ec455896c66a1e47aa4e5e0e8b2dbd08a89',
        '0x68cd2d8b5e4707f4a5f53f405884bd23cb402b230aa410de0c81472f1deef63a',
        '0xbc900ed99fdd9dc4ae6ede488712f4805af9f09ddf3a28039b78d68eb3bdd63d',
        '0xe1be5a376950378234f7a64503864f8953355c935ef6aae83c44bc6b522daaaf',
        '0xa9d51a0829ec893cd993853d48da6bdc73a81c14874514aa4e4e0fe55a8b14c9',
        '0x8bcc9bda3bb8b01df47cc0e0dd608abbb58f514d899f0f83438d155b2146b789',
        '0x99349dd1648f3682cc374179061035ca2fea06fc81cfd88e1197e532f1b9e9f5',
        '0xb134f635fb4e393f1a52e93bbe859b662bcf299281dbfdff9119a3298af582a9',
        '0x6f204de7fe5801a2cb61d14eedd94269c2471be1d9bdafc2bf04d2f1c6d09964',
        '0x73ecb155e8d45f1f0f45915e258c8945b13a51b23e61afd9d7aea3c4b6c75973',
        '0x8d4ba51eaacdf8e6e94f154cc0d7bb35d3ef70a23b8b77c0ba9cd75c6dda92cc',
        '0x277f34aedce5107ac25789bd216e9c24966779e339d067be2d4aa79dd6fcfe3b',
        '0x995fbb315e529f3b359386f016f19f1426cd4b9ba401b634dfe79d7a682f4b53',
      ],
      receiptsRoot: '0xf6049ea6223c7618594a16d22892fe4c3d639f752092b9db58aa4e06aa6b882d',
      receiptProof: [
        '0xf851a04e942f0242939a2c6388b384086ae6e48bbf01533498919eb773cf7227b8695d80808080808080a0827e297ceba089177b9ea4b6383a942acc762afffa8fe21094e7c236d1c906ee8080808080808080',
        '0xf9020930b90205f902020182afcfb901000000000000000002000400000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000808004000000000000000000000000000000000000000000000000000000000000000004000000010000000000000101000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000100000000000000001000000000000000000000000000000000000000000000000000000000a000f8f9f89b94c376604e46d5fa11a123cbfbd858a168dc0c4cccf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000000000000000000000000000000000000001324ff85a947ed67834b6f3db4e5a68c6bab855836d63cb602ff842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0a6ecbdc4a2a2a761900b21c8d608f378e2cc901c29ff1aff261fa4e1987faef180',
      ],
      txIndexRLPEncoded: '0x80',
      logIndex: 1n,
    };
    const eventProof = await encodeLightClientProof(eventProofData);

    const expectedEventProof = '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000004a651000000000000000000000000000000000000000000000000000000000004a650a00000000000000000000000000000000000000000000000000000000000000e0f6049ea6223c7618594a16d22892fe4c3d639f752092b9db58aa4e06aa6b882d00000000000000000000000000000000000000000000000000000000000004c000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001eae2a5b4979a99121cb2aafa09907d98695e3c4ca2941f31d0cdad3ea264b594f5c2b13aa6a7f8c1ed44e497980472037c198dfcbf35896cb2d74e084ecd6704b3284c8d95b658f289434609b979826e2063929d1767f7be35ab2368ace350b1c066d4bbd613d12e71272ab7abb3442e7edec1b179fac969c79841158cd3881be702e750000000000000000000000000000000000000000000000000000000000d1b1a1d96b1538ac3d2f96d68e29524b719ad9ff56917002d1b6063718ed4deadb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d7134f39c738f520e4f90d96824777cb27d249ef982e88df4df160ac545c24cc1f74692d2a5188a9f8c0ce026d29b30df2d6c4ffe242ef291944e28d8818d097ce35307f345d5658cd528315544385387960bb417543134d7e6785fb76613f89ef4ced5b77ae13a02b4ade242ceac410675e5925b46620ce32e212309c5ba03fddf4c6fc5d3c98dc83cc6fb4fbb96afc5a59ff920bb446b412e221ca26f150a13aa48fcb8608cc9beceffaeff27c4a7730405b150c1bc866f4aadfb20184490b9882ed5afce05599433e3f44c721f0b4bd7d56cdcf6c16ac50ebf0484743bb2c96e22a065822035fd5ffe222a0882401c34e1eb622d58db141345cf0189aa97a557909d1f729215f7afa137bf35023a63e12ef5a115447ef3b259dccd3521e7aa0d33c12227b77c81879789dc3876aee1ac42219dd5f95115f8db569805e7f772651a3d9d7908e91546341415d1567a0ec455896c66a1e47aa4e5e0e8b2dbd08a8968cd2d8b5e4707f4a5f53f405884bd23cb402b230aa410de0c81472f1deef63abc900ed99fdd9dc4ae6ede488712f4805af9f09ddf3a28039b78d68eb3bdd63de1be5a376950378234f7a64503864f8953355c935ef6aae83c44bc6b522daaafa9d51a0829ec893cd993853d48da6bdc73a81c14874514aa4e4e0fe55a8b14c98bcc9bda3bb8b01df47cc0e0dd608abbb58f514d899f0f83438d155b2146b78999349dd1648f3682cc374179061035ca2fea06fc81cfd88e1197e532f1b9e9f5b134f635fb4e393f1a52e93bbe859b662bcf299281dbfdff9119a3298af582a96f204de7fe5801a2cb61d14eedd94269c2471be1d9bdafc2bf04d2f1c6d0996473ecb155e8d45f1f0f45915e258c8945b13a51b23e61afd9d7aea3c4b6c759738d4ba51eaacdf8e6e94f154cc0d7bb35d3ef70a23b8b77c0ba9cd75c6dda92cc277f34aedce5107ac25789bd216e9c24966779e339d067be2d4aa79dd6fcfe3b995fbb315e529f3b359386f016f19f1426cd4b9ba401b634dfe79d7a682f4b530000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000053f851a04e942f0242939a2c6388b384086ae6e48bbf01533498919eb773cf7227b8695d80808080808080a0827e297ceba089177b9ea4b6383a942acc762afffa8fe21094e7c236d1c906ee808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020cf9020930b90205f902020182afcfb901000000000000000002000400000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000808004000000000000000000000000000000000000000000000000000000000000000004000000010000000000000101000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000100000000000000001000000000000000000000000000000000000000000000000000000000a000f8f9f89b94c376604e46d5fa11a123cbfbd858a168dc0c4cccf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000000000000000000000000000000000000001324ff85a947ed67834b6f3db4e5a68c6bab855836d63cb602ff842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0a6ecbdc4a2a2a761900b21c8d608f378e2cc901c29ff1aff261fa4e1987faef180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000';
    expect(eventProof).to.be.equal(expectedEventProof);

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (chiado send, src != tx)', lastGasUsed);
  });

  it('Should verify hash event proof in Goerli with different src/tx slots [2]', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0xcb0cb3c451b7ebe60ddfd98c2619ac09b0b3d5b22c3a609bfd9ff9b9bc571e16 on Goerli. See:
    // * https://goerli.etherscan.io/tx/0xcb0cb3c451b7ebe60ddfd98c2619ac09b0b3d5b22c3a609bfd9ff9b9bc571e16
    // * https://goerli.beaconcha.in/slot/6105627 (tx)
    // * https://goerli.beaconcha.in/slot/6105632 (src)
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0x16b914309f85c72e258a0ff14bf150548d88022aa9fd802633b2a9fac168477c', // Topic #1
      chain: 5,
      contract: '0xeb76221aebaf063f16df72cd29bed12d6de6c731',
      srcSlot: 6105632n,
      txSlot: 6105627n,
      headerRoot: '0x7f7af542040f3dc013fda7f3e2991a5e0a4571f42e22cee871682ddbdbe6ebcf', // "Block Root" value (src)
    };

    const eventProofData: EncodeLightClientProofParams = {
      srcSlot: event.srcSlot,
      txSlot: event.txSlot,
      receiptsRootProof: [
        '0x96eade21fbfa045ae1c4a03095e80eb59d40022c7e4c3ee12955f51a1a5ec41b',
        '0xb441c2770a157250ca6b7ce91025cd9759ed706db069245e219ea69e7d943a69',
        '0xf5fc423b06db32364229ce518346a28c65f0eef93b70639e3513204c5324f9e4',
        '0xf700cebcf66e6f339e02999dee3897121875c68e6ebc1f2bf188d01cd199c0e2',
        '0x8a4bae0000000000000000000000000000000000000000000000000000000000',
        '0x22b533256dbfd022849311aaf8251ff1a675db9dba137734f3eec93bf741333d',
        '0xdb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71',
        '0x0c877d1ce0127af6af1dc651aedb47f4f239f8b227c8400e889c2566def09949',
        '0x1de6881bb7b33d5b31cdd10ca7d1178ce38d84714e66144f4238079e8bc8264e',
        '0x0b822723040bbc30008b1f1b0df69c34e920018afde1e7b8471a2dc756224851',
        '0xd098c5d5060af2d282060b457271a2a767402e9437302759ef9285eda6357e9a',
        '0xfe0ad045387525ca2d4a8c62435f5d9e16ecfe12410c89b0e7f3814a34743e0a',
        '0x2e957ce38aa2efa5b15befaa2a380cdd0ec9b631e2e5c7d19d6a316b9cf0ca22',
        '0x00ef885eef5ac162e7f796372c6ceb485a675967a5ae1857a5e0c7a3260c9a15',
        '0xb3f5ee4000f476601c210c31335604a9c349de5604d491110048428f7e69411d',
        '0xbc3f2bf93babf91c6a84d15e13da7c010c19c33241f34dc0fa703eff5a183076',
        '0xc6733651a772558d3984eb2adf4019f11bafaec254477d337438416aa4295fa6',
        '0x93e9fec63405b63a63bfa9f41299332563657b89b0299f1b2d7cc016609382c3',
        '0x4bdfcb9e804a628e4c64dec5603e335c4d65aa667ff6aa1975266a902638272d',
        '0xada723133ed0832e333614d5c3b777f9de7d484f9f8e9f54576e74231dd8de22',
        '0x7419ec56df700060f685880e8af51628ea97ddaabdc375e4b990ce8aeb20e368',
        '0x9ef3a3fb4b27a694fb8564369ac2ab0bba85355cac611310b72e8a3de6a2b5d0',
        '0x728a6662f589a03cef311c85fdec9a575260292421f3a365e2f50b80bac80153',
        '0xfc2c4311a3bac25e796b05405bfa480ae81b4650805f1e34c34509377407f8c4',
        '0xb1aa2dbbfae70ee450b390c37cd2adf0c0863fa6dbeac8ef219bf9366bb78baa',
        '0xefbe5f6cc012bb4d8cf0bfee572bc7a54bf06bd28c72c7b03e278f7f23476883',
        '0x76cfe0fbbb90c20928736ce3c4cc4b2c9e713d139072fa73d499dddc2ee5cfb3',
        '0x5d71dc4cded95cf05b54a469737f80bfee888af725498a30858e9143b3f53f9e',
        '0x95dc8059af89fc0e19a95fc13221b6f3fbea87311e6163815fc0b2083d47bd7b',
        '0x2754f049317fd3e2013b2f42830dc1603a9051cb2be68a4c729d42fb033268f9',
      ],
      receiptsRoot: '0xb35e754e3f9c9f82ddc48db87583b0974148f0ce00b9a91ec213355fc35ad0e9',
      receiptProof: [
        '0xf90131a028f5381b9ed2d877c93f9e4ca4404980bee45826d99697bacae2d774e24896b9a016bade0edef69194d8e4a60e62e04f8183ad16b43b35fa278da7cefa8a168dfda0bc93a1ae044bdf3dba39f0c0e4543d945c74cfdafde4accd5931cf52f42a024ca05923ac5fba1a88cfaf1ce1a6f690015ab214bacc0addd59c7ce0a377ddaaf43fa0db25a218b8bf72dc9cc3b112353b5451e887cb9569bb9abc688883fa8a491523a08427f399c62aeaba64ef49d410ce57e32c963b1edb65ea7acecb25499f8d7255a06e799c66a24cfb7b5f6bff8b9c48eb84d3243c6138ab241b2bce079a9d89dfe8a0bd922c49e6aa9bab22d7d0fefa1a30e14dca325b8b186365f046fca1f607cc7aa0a92fb88a0586ad1328f57ea8dee3d70df70a3eca30142d6ebbc6d585274cee798080808080808080',
        '0xf851a09657893f387655b08a122c3f49c8e66844e32495f2d8e69854d5612a963bcf48a050c0538a9045f828db894b1790cd8766e730be0a91a9b139e063ab3ba0ee3ef1808080808080808080808080808080',
        '0xf8518080808080808080a00db5e40b57e595caa4a9eb05b33bc70c52a66726b6a53e465f70be3e475f2edaa0dcb45d6a7d33c8b288ad5ef87832bb771d7bcb4b42208244b671a574985f343980808080808080',
        '0xf901b1a07832e9672c7951286276e2ecfc8a32519494c0e2ad7f8a34ec062cfdcf47401aa0f02a443211037593fa63e908bbb272a6ad317f0954f7d4b349dedbfc6f56c0d1a087b0940e0f2891c95f98a142f5b6275e38a85b51e7a3261e62f780073798fbfda0d00870b76ed620932ceb51483a54179a2350650c21570184cba5e2abd37b75fea0856661aa582919a5bb626ec6f6234509eb21cf0bca4fce59da03765a44c3e876a032db5488ae5e4dfb98751b1ab439c5f017730a942eeef106edba21ad22d856c4a068b9a11ab56ab2d4d5630cd45d0733a018d71c1df8ee87296a7eb568b6432574a0e8cb50d766b9c189e3816282ba64771aa156d64dd41b73554e3612a8a404f3a4a03f2f721c7eae49e77fc341b38cc3a5eb8c6366a61091cc4abab6aa9afffb3baaa009d901d43fc71c360be6887dcb1b451b52fd37ae88a45d62b2efc56a9bd8a07fa03e01753a06e73f10a8bb52403e03eafae3cbfb25de0ed360dd8fcdb9151693cda06e70284eee91eaea6d7813f5bd75b00f8e45d8e3b26f799b6092c279fb9ced05a09b0b4a1f1827b3292b403f7f6da99e9e2bb2f550328afd8aec73648b8168c93b80808080',
        '0xf9020c20b9020802f902040184018f46f3bf8f9f89b948eab7d787f4ead6b5fc41424b42636fbfeef86a0f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000000000000000000000000000000000000001240df85a94eb76221aebaf063f16df72cd29bed12d6de6c731f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a016b914309f85c72e258a0ff14bf150548d88022aa9fd802633b2a9fac168477c80',
      ],
      txIndexRLPEncoded: '0x819a',
      logIndex: 1n,
    };
    const eventProof = await encodeLightClientProof(eventProofData);

    const expectedEventProof = '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000005d2a2000000000000000000000000000000000000000000000000000000000005d2a1b00000000000000000000000000000000000000000000000000000000000000e0b35e754e3f9c9f82ddc48db87583b0974148f0ce00b9a91ec213355fc35ad0e900000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001e96eade21fbfa045ae1c4a03095e80eb59d40022c7e4c3ee12955f51a1a5ec41bb441c2770a157250ca6b7ce91025cd9759ed706db069245e219ea69e7d943a69f5fc423b06db32364229ce518346a28c65f0eef93b70639e3513204c5324f9e4f700cebcf66e6f339e02999dee3897121875c68e6ebc1f2bf188d01cd199c0e28a4bae000000000000000000000000000000000000000000000000000000000022b533256dbfd022849311aaf8251ff1a675db9dba137734f3eec93bf741333ddb56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d710c877d1ce0127af6af1dc651aedb47f4f239f8b227c8400e889c2566def099491de6881bb7b33d5b31cdd10ca7d1178ce38d84714e66144f4238079e8bc8264e0b822723040bbc30008b1f1b0df69c34e920018afde1e7b8471a2dc756224851d098c5d5060af2d282060b457271a2a767402e9437302759ef9285eda6357e9afe0ad045387525ca2d4a8c62435f5d9e16ecfe12410c89b0e7f3814a34743e0a2e957ce38aa2efa5b15befaa2a380cdd0ec9b631e2e5c7d19d6a316b9cf0ca2200ef885eef5ac162e7f796372c6ceb485a675967a5ae1857a5e0c7a3260c9a15b3f5ee4000f476601c210c31335604a9c349de5604d491110048428f7e69411dbc3f2bf93babf91c6a84d15e13da7c010c19c33241f34dc0fa703eff5a183076c6733651a772558d3984eb2adf4019f11bafaec254477d337438416aa4295fa693e9fec63405b63a63bfa9f41299332563657b89b0299f1b2d7cc016609382c34bdfcb9e804a628e4c64dec5603e335c4d65aa667ff6aa1975266a902638272dada723133ed0832e333614d5c3b777f9de7d484f9f8e9f54576e74231dd8de227419ec56df700060f685880e8af51628ea97ddaabdc375e4b990ce8aeb20e3689ef3a3fb4b27a694fb8564369ac2ab0bba85355cac611310b72e8a3de6a2b5d0728a6662f589a03cef311c85fdec9a575260292421f3a365e2f50b80bac80153fc2c4311a3bac25e796b05405bfa480ae81b4650805f1e34c34509377407f8c4b1aa2dbbfae70ee450b390c37cd2adf0c0863fa6dbeac8ef219bf9366bb78baaefbe5f6cc012bb4d8cf0bfee572bc7a54bf06bd28c72c7b03e278f7f2347688376cfe0fbbb90c20928736ce3c4cc4b2c9e713d139072fa73d499dddc2ee5cfb35d71dc4cded95cf05b54a469737f80bfee888af725498a30858e9143b3f53f9e95dc8059af89fc0e19a95fc13221b6f3fbea87311e6163815fc0b2083d47bd7b2754f049317fd3e2013b2f42830dc1603a9051cb2be68a4c729d42fb033268f9000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004e00000000000000000000000000000000000000000000000000000000000000134f90131a028f5381b9ed2d877c93f9e4ca4404980bee45826d99697bacae2d774e24896b9a016bade0edef69194d8e4a60e62e04f8183ad16b43b35fa278da7cefa8a168dfda0bc93a1ae044bdf3dba39f0c0e4543d945c74cfdafde4accd5931cf52f42a024ca05923ac5fba1a88cfaf1ce1a6f690015ab214bacc0addd59c7ce0a377ddaaf43fa0db25a218b8bf72dc9cc3b112353b5451e887cb9569bb9abc688883fa8a491523a08427f399c62aeaba64ef49d410ce57e32c963b1edb65ea7acecb25499f8d7255a06e799c66a24cfb7b5f6bff8b9c48eb84d3243c6138ab241b2bce079a9d89dfe8a0bd922c49e6aa9bab22d7d0fefa1a30e14dca325b8b186365f046fca1f607cc7aa0a92fb88a0586ad1328f57ea8dee3d70df70a3eca30142d6ebbc6d585274cee7980808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000053f851a09657893f387655b08a122c3f49c8e66844e32495f2d8e69854d5612a963bcf48a050c0538a9045f828db894b1790cd8766e730be0a91a9b139e063ab3ba0ee3ef1808080808080808080808080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053f8518080808080808080a00db5e40b57e595caa4a9eb05b33bc70c52a66726b6a53e465f70be3e475f2edaa0dcb45d6a7d33c8b288ad5ef87832bb771d7bcb4b42208244b671a574985f3439808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b4f901b1a07832e9672c7951286276e2ecfc8a32519494c0e2ad7f8a34ec062cfdcf47401aa0f02a443211037593fa63e908bbb272a6ad317f0954f7d4b349dedbfc6f56c0d1a087b0940e0f2891c95f98a142f5b6275e38a85b51e7a3261e62f780073798fbfda0d00870b76ed620932ceb51483a54179a2350650c21570184cba5e2abd37b75fea0856661aa582919a5bb626ec6f6234509eb21cf0bca4fce59da03765a44c3e876a032db5488ae5e4dfb98751b1ab439c5f017730a942eeef106edba21ad22d856c4a068b9a11ab56ab2d4d5630cd45d0733a018d71c1df8ee87296a7eb568b6432574a0e8cb50d766b9c189e3816282ba64771aa156d64dd41b73554e3612a8a404f3a4a03f2f721c7eae49e77fc341b38cc3a5eb8c6366a61091cc4abab6aa9afffb3baaa009d901d43fc71c360be6887dcb1b451b52fd37ae88a45d62b2efc56a9bd8a07fa03e01753a06e73f10a8bb52403e03eafae3cbfb25de0ed360dd8fcdb9151693cda06e70284eee91eaea6d7813f5bd75b00f8e45d8e3b26f799b6092c279fb9ced05a09b0b4a1f1827b3292b403f7f6da99e9e2bb2f550328afd8aec73648b8168c93b80808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000020ff9020c20b9020802f902040184018f46f3bf8f9f89b948eab7d787f4ead6b5fc41424b42636fbfeef86a0f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da00000000000000000000000009ae477ffa4f42038b02cc0f276d2bdababf1f09da0000000000000000000000000000000000000000000000000000000000001240df85a94eb76221aebaf063f16df72cd29bed12d6de6c731f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a016b914309f85c72e258a0ff14bf150548d88022aa9fd802633b2a9fac168477c8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002819a000000000000000000000000000000000000000000000000000000000000';
    expect(eventProof).to.be.equal(expectedEventProof);

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (goerli send, src != tx) [2]', lastGasUsed);
  });

  it('Should verify hash event proof in Ethereum Capella fork with different src/tx slots', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0xd9af5ea05206f03b212a117d7cc6d1d18b31cb9a38914e6428d3647058a3d613 on Ethereum (Capella fork). See:
    // * https://etherscan.io/tx/0xd9af5ea05206f03b212a117d7cc6d1d18b31cb9a38914e6428d3647058a3d613
    // * https://beaconscan.com/slot/7407274 (tx)
    // * https://beaconscan.com/slot/7407296 (src)
    const event = {
      signature:'0x78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd66',
      hash: '0x588d6a678bf36b8ee98fbf6f85639459446b25621405d4639eda67b30267cc68',
      chain: 1,
      contract: '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',
      txSlot: 7407274n,
      srcSlot: 7407296n,
      headerRoot: '0xe78ac4c610dd70ff62a84ed2ba8f807f6b7bb1cd0e0dc0ad8a8d9acc23d48914', // "Block Root" value (src)
    };

    const eventProof = '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000007106c000000000000000000000000000000000000000000000000000000000007106aa00000000000000000000000000000000000000000000000000000000000000e0d58e85e46ad0e7ed200542e44624d5672444e51bde5119bbeb0efde39e28b98700000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000cc00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000001e19a31ba64c30329c96c05e87ed7294144c53fe596a88c9e48dea1f6e78024cc9d310e5ed3536e345eda39a8f67d3ad5d7f7a5b7f7b095b0a389f73899603e95d75abb010a19cfa412a70a7e7a3a6a089111d5eeaab143f113dcd18a40c16461bff6fc07fbed606c2d0b5cd791c01fc465badb9b04d7042bd769e4ab1849ed069c6e6200100000000000000000000000000000000000000000000000000000000a1bae51468c5e0b73e2dc93798340751702fe0ab948d8ae91f9f17811fcc7897db56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d719b4a8ae5d9c9675731557c3b80e9255f63a6655c7822f7d09112de78c10de345a420e24979ad51acec51b5e189a51c123e662f76ad6a16cf3209f66c403280d176465d9bed2eaef0548aa2bbd0570ee4247a334e5b7a393995c1b982207157295ea92b899d53824ac9e39deabe3f6104e2a3a41df541ea6de045285e6d87a7fbb47653f8075a27b9ecab8b3055b691f86afb5c3646212d229269ad9a845000491e27b9f262619a089c9bdf747c673c7f8ea98de4316e7b9b8841d1803f6df6c6679fb77936ba1c01154bb5ebdaa7bbfbb236eb0faabc57d9dbb8d78274e0879729d224c29392562882689b6d1d403a603d091c8cc67bbf1c083fc9533636c5475c4e12d7439e80b6f6df633c1d3842cb3ba739b1639fdc8db89f865ac3e6457e9048dd6cc002448f13d3f381cbc258a732f7bddf5220616f45bd85576fc26755ef845eb7ce4f677220941c59395f83465ea0a5fd63a931409353eadbc43241f22c215c4380834d836003c21c46e909491488c9093b8573578d0d0ae5be91e84d41ee5060a84bfd343c8bbc0be3ba32738736fc5eb2956c85fa4dea6d2465c86fc709560b45822a911f0ae4b98355b0c738efe3ab1882752c2139f0931bec1259411a801cc88d3775f3e7f4c14d87f124570617c507808257fd338b3bf8b911944df6b89755125d4f6c5575039a04e22301a5a49ee893c1d27e559e3eeab73da794fd3b4fb04a6d93a2d2aa89fc1a8baac34cdf7c3039d3f3daa1ca8f86ba0c9d0d2a88173f07dab94b8c1c59e39f30e4c6f3c1b7c8878da284cdde077a58a6f0c0d0026a53695006deea59820f26e1f25069c3dc383683e555eb9b59225dbb70b3806d7e2d8a4a8ac427db5a9f2f5efdaf92bbbbdf62c570f82c1de0cd4eac17ee580aae8f20410154e797267ce381c22a18d9dd17116928cee55f1a5a9eea3fe99d1e9962a75913e87dc699efaa8c467798819818cd0d42de259a5422afea4127b708bd87ee021a161d44c77e24972df62c292860b8362933b35aca1ca59a190000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000134f90131a09cac66a5ab16956c1dfaa0b418aa4c76e9bcd68a77197604cef38daf3319f2e8a080f820481e2f97c56195040eb826538891fde3889041d88a65b9619aeff705e4a0efb19f9925e65c613295952a0fcf112fe9760969bd4fbc6b4104a2670f4e5022a0ecf0d43e96f36c14bd2f68febe93e274ad406dc080e5f673f81f9a3ec9f9cb17a0eb48f55443f454d485eae83fac13c0ca690289f856a473b6271020a98f088e7ba046fae9d859a1419cd4b382eddfaa9231d0dcb54080ccb82f5ac05b82ac430d13a09bd5aa4b82e54a2756c00df0cc15cfc9bcbdf6cea8df3120a7b55b4b4fdd588ea028b42b31fe16dd71c665c3b40084815574c561802a17e6facb971cc3ea21fd62a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd80808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000214f90211a0c5a2303ead1297a766c91a1b5145e590234362995df156f96d52787c376c5350a0935ce84e03006929f19108bed96de130337ca6fda3542a26c12a43b5c0b99ecba09d59dcd6861ce299ef1f70be1a74196c63081b7ffca637cb2a3166c965e5af92a086f318b87a69acc57d355a1fdd41a8b4c507751745e0d884127b35130fb6b47fa0036ac7a61400cf2768db057ec03435438001131ab38f0bcc531f5ba81ea02c1aa00ab867dd62853af9a62547e6459b9d7e6338024edf8626573eb706a02d66e8fca014f5fec5fe09b418d33c5dadfbf1a67636e86cb65d381f166e2bfbe6dced96b5a04ba0962ae7350f13dc240c31cb003b33cf4363b63de03c695d8b37dcc5eb96e0a092d9597fd2a380a4fbb4a5194652f6215122f4636ce5c36fe1e8c21ee37b0e39a0ba1c2517a8f8f4d00ba825710a2579d1fabb035c179e749fb3b2a10967313653a02f6ef27d7e18bdc2417958f357ffa603f83825e41d9aeb54646644997faa8716a03527f4eee781adc9618dedb9818f8e51cc71371bb81b1311028fd296f7a9d915a02e479cc85565315b015448e8b14a5d4b060f876c22ca1f644b922419e25bc8d4a0ecb30190671775ecbed330ddecfd5dc951764566863437fe781a519e91ac5390a014c30b792ad1dbc48ae8a150ac5aa8d55133a66f52b1e9a84c146f0768905873a0b295bd9bf64033c42b0482cbe7cfa078f6e4ae85b2926a37e21d1daf039d5e668000000000000000000000000000000000000000000000000000000000000000000000000000000000000003aaf903a720b903a3f903a001834cc10bb90100000000000000000004000000002000000000000000000000000200020000000000000000000000000000000000000500000000000000000000000000002000000000000000000000080000080000000000000000000000000000000000002000030000000000000000000000000000000020000000000000000000100000000000000000000000000000008000000000000000000100000000000000001000000280000000006000000000800000000000000000000000a0000000000000200000000002000200000000000000000000000000000000000000000000000000000010000000000000000400000000000000000000000400000000000000000000f90295f89b94a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000890a8baefcf4ce2e5a39c712c0a74e5f057c85dda0000000000000000000000000aafb85ad4a412dd8adc49611496a7695a22f4aeba000000000000000000000000000000000000000000000000000000000df847580f89b94dac17f958d2ee523a2206206994597c13d831ec7f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000aafb85ad4a412dd8adc49611496a7695a22f4aeba00000000000000000000000006000da47483062a0d734ba3dc7576ce6a0b645c4a000000000000000000000000000000000000000000000000000000000df6935b6f89b94dac17f958d2ee523a2206206994597c13d831ec7f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000aafb85ad4a412dd8adc49611496a7695a22f4aeba0000000000000000000000000890a8baefcf4ce2e5a39c712c0a74e5f057c85dda000000000000000000000000000000000000000000000000000000000df6935b6f8bc946000da47483062a0d734ba3dc7576ce6a0b645c4f884a078ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd66a0588d6a678bf36b8ee98fbf6f85639459446b25621405d4639eda67b30267cc68a0000000000000000000000000aafb85ad4a412dd8adc49611496a7695a22f4aeba0000000000000000000000000890a8baefcf4ce2e5a39c712c0a74e5f057c85dda0046832e1f311f0176e2371f121150d3f499a857c57b0642d4e0935290c1398000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012900000000000000000000000000000000000000000000000000000000000000';

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (ethereum capella fork tx, src != tx)', lastGasUsed);
  });

  it('Should verify hash event proof in Ethereum with different src/tx slots', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0x974b35877250ba0df54e6977f329898a830310cdde605ca1afab01c548beb021 on Ethereum. See:
    // * https://etherscan.io/tx/0x974b35877250ba0df54e6977f329898a830310cdde605ca1afab01c548beb021
    // * https://beaconscan.com/slot/9173578 (tx)
    // * https://beaconscan.com/slot/9173600 (src)
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0x320865942f1a7980d504a34ced177df217ab275824a6b7f35e79179bd41a53a0', // Topic #1
      chain: 1,
      contract: '0xAcB688e7542DD61d0e976E270CB562B5c93Ca855',
      txSlot: 9173578n,
      srcSlot: 9173600n,
      headerRoot: '0x08d654bde5d2818693d5a4906bd5536c42788af9eccf99687dfd47818103e7cf', // "Block Root" value (src)
    };

    const eventProof = '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000008bfa6000000000000000000000000000000000000000000000000000000000008bfa4a00000000000000000000000000000000000000000000000000000000000000e0aae4e5e1624d8fb0bbf9a729fa1049bed2f9d14e980d46b0139d1037f0ad5bcb00000000000000000000000000000000000000000000000000000000000004e00000000000000000000000000000000000000000000000000000000000000d600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001fd063b94f850422c6e1d49e0926a51e92e37e3dca829bac3f0f882cb529c8cd05e23df8b8b6c0d0db633b6d0e2872e1b0674c0e4a6664038bdf1744bc8b2c1e2a6eb7d2a1a78462065cefd6a2f66cdb6aed5cb291816ec4e263193e66f34c1eba5347c3377638b5b54887589b7d343a0e6f482fe6a054649944e811a094fd6573536d98837f2dd165a55d5eeae91485954472d56f246df256bf3cae19352a123c6b51cc02000000000000000000000000000000000000000000000000000000008fe781d175844e6423714c2725fad329f57f213afb974fb1addede30f5d782c2db56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71e0c2ebadd5f95306cb19c0ca611332efa81a5075003d04f9839635c3d8c0c8f2d167ad2702e81d21beb8f1dee4c64639ac8eb0159b24b8b0350bd162c36a860f90ef9ea4bd76806a0eea8ac2c1318d732096b28f0146bd4969621baa9b83c97640b52c3f7b666a8752e8c826a55da5d8a4fbec0e962f874f2d03e9a58b04d074127c937f57ff605c36a1044f1751cdae6ca90361292688aa230b73beb4f7ac4d0fff78ad37bcbfce59d096d6b3f2789ec92988bc65bfd6b37898e2ccca92ec8594759aa2b9ba2b01949b741771df5af5dbbd9d7d06863bb713bb633504753b61271c5d9acec5c4fc7541d1a9b902676c2e97e1106f604559e88e4625db3eec038bc66ddb70ba99942e3f94ae47f0756a503502d0eb0ecc032ae497d5678749d994175f2afb04aa82431e3fb12b88feb19f0386f31e08dd989f1555b42899a5907f0aebb54d914c268d4097564b4bcd5bc24147ab5208d8a5641b4dfd95b4c0df4fc3bd4cc78558b904c76efbefe60aa59e07d8a8b8416d1c084ad16bbcc053a34c64dd1887977cf2362645c009d443b9495d9e594c96fd2b5492e21e228a5f5aed231d65c174640c62c01e751052760684c914d25d48cb02c4c426597066308bfe0124a336288ac9afa6d953f01626ce6a8b760fead27cceb185ced96cd89ddc4df6b89755125d4f6c5575039a04e22301a5a49ee893c1d27e559e3eeab73da74f9d4b8950aa1ed9971628d58cb07746145f3888675224c3c4426f551444e3ca525122b66a220a48321e7a05713cdf20303d5bc84edc28771b125a5b362d7deda768ab873dc25b3fa79a2515aad625d6c85b256e077fd1426a033eb221ab722c05afabda7533dad24668facc43f14df88feee92259a9ed1144e884b83534f723866ef807d9b56042586d32e65b088ada45c374f85575c8b792fa704fb92ce79e5340be2a9e4cb2ff12907733b5b30bc58e4cc3da549b861828e569e893ed22b1aefca2ab3b819673b347bd57240e6206addd75cde143585673816f161c6a2685000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000134f90131a028128fddc3d879059d852b0a090fa064543fac51870cf83f84836c23a46aac8aa07a82d055c049dd5e6c2ed06c9fc4b41b1c6128951b1dbc29ead8ce903d7d3bf8a0cf2c51d9ac3e6c2f828467ca78f6a4022ab7d539ff9ca3cb978d019a1ce65a39a0e18436de150fb2236076440ef97c20e21c8e75d87e942ba1d7c0b7e21f52d388a03eb4ff496a15f41df1b2e511dca73341a6c09d2dc52d18c6a5f17752f4328269a0a1d142d64316cc0884d9719e5242ada32b25451368159f39e8d78129d56cb3c2a0ea44ab0dceee791c107548decfdbc83262f570d4628bea12bc9a92dc76b69a86a0ec05381aeb9bc1a54d42d7c0ed6b29d3dbe587623530f59d7fa2f476d0ea3d8ea00f4a52b161a3c4e4f328e6c497fd6236bca41605018c3f678bec4451936f324580808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000053f851a00b9f40e34219660ea779fac5af93fc74fef60693c5f116bd245afd182f2270a2a0a0c2ee13a57fd20e8f6c12d711c46e588e1e2fb012f2bfbc7bb71aae381ac2bf8080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b3f8b18080808080808080a071da8016fc37b9504696784a7789d265663ba9380d3b00ca1c2002a26cdeb2e4a005e3285d2d16fbf0a6968f8ff43c3a86f90ba751212fd1bef1f40932558ec8c5a035522179867c6744a1238b88adc5d7115a5ea34c6c64410694d7ce9d27fd3f02a07e39887d4da431324197ffa76fc650862fd2963f530a6fd7612fbb711ebb4e87a02f99dc300010e76ada96dc92d1e079c29deaff6cb32927a90f323a583fef1fdb80808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000214f90211a01014efd89d50dd2211f8a04b0046d6d89e749dcf02524181bdc273fb9bab8074a0e0d1d84a2eabda5d2125b240678d1f2d33b914c16fb60fa1ac6abeb9486e89bca04534294d7854ed2c9a10851ba1c8203695a2398d68cccb3fa9b4a877e4c812f1a05a5c621c93014c0478c43ef32d46836d79c85e3339fc526a4c7c12a9fdcac9d0a076a0554a348d542d6844f8b971e3ad397b593b5d98603dca523c9a5115edb11ea0639f5d8d70b4a4f09e5c39598827c18fa410ca2c9085fcb328d38514405fa624a0f535446f176d78d53422de61a82d1edb158dc72c765bb4b553a155b4ae429259a018028c6f73e8e844e0ae56f37d8ad0bf0e419ba35e57497cf78723f75c18e04da0d9a21f522b8f817f63e9d8d637fa9cbd997fdf0f8a9b5a985036bbd385e9bf85a079fc4ebe5e393fbb215b87de497628605f92329a9d00b47d5f6226c82bb1b515a057c4eed5eb704e22aaac2506d6cff864183519fc43486d9b9282c9a1fb19f32da012c2d1e9abd194a64268f280796e8db84f8ea2a2bd81fc1216c26d3fafbfe673a06fd15135bdc01b48d55bcf037cfda75b8807fbe53bc3709ee995288229491e18a0c8fd48b8da9ec804b443994121d0cc8514a60ac762a878176cf734dd95547004a0669c77b8d05d183b20626c2b4bffb3d164d4e68cfc90eb64ec24a873f311ac17a0ef72860e81ccde0b33fd622fdfacf1323c6e94b43afe5e1a8dbe78d76ea38bdd80000000000000000000000000000000000000000000000000000000000000000000000000000000000000028bf9028820b9028402f902800183ebd763bf90175f89b94c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ac7d14d57b444d3d5a7890f519a6864901be8cea0000000000000000000000000acb688e7542dd61d0e976e270cb562b5c93ca855a000000000000000000000000000000000000000000000000001be4911e99ef632f87a94c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2f842a07fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65a0000000000000000000000000acb688e7542dd61d0e976e270cb562b5c93ca855a000000000000000000000000000000000000000000000000001be4911e99ef632f85a94acb688e7542dd61d0e976e270cb562b5c93ca855f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0320865942f1a7980d504a34ced177df217ab275824a6b7f35e79179bd41a53a080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000281a8000000000000000000000000000000000000000000000000000000000000';

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof

    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (ethereum send, src != tx)', lastGasUsed);
  });

  it('Should verify hash event proof in Ethereum with different src slot == tx slot', async function () {
    const { lightClientMock, deployProofVerifierTest } = await loadFixture(deployFixture);

    // Tx 0x974b35877250ba0df54e6977f329898a830310cdde605ca1afab01c548beb021 on Ethereum. See:
    // * https://etherscan.io/tx/0x974b35877250ba0df54e6977f329898a830310cdde605ca1afab01c548beb021
    // * https://beaconscan.com/slot/9173578 (tx, src)
    const event = {
      signature: '0x23164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957', // Topic #0
      hash: '0x320865942f1a7980d504a34ced177df217ab275824a6b7f35e79179bd41a53a0', // Topic #1
      chain: 1,
      contract: '0xAcB688e7542DD61d0e976E270CB562B5c93Ca855',
      txSlot: 9173578n,
      srcSlot: 9173578n,
      headerRoot: '0x15c128d36727d97b1979a5397d28106bee1851b4fdfacaeb684be1aa802a92c9', // "Block Root" value (src)
    };

    const eventProof = '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000008bfa4a00000000000000000000000000000000000000000000000000000000008bfa4a00000000000000000000000000000000000000000000000000000000000000e0aae4e5e1624d8fb0bbf9a729fa1049bed2f9d14e980d46b0139d1037f0ad5bcb00000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000dd063b94f850422c6e1d49e0926a51e92e37e3dca829bac3f0f882cb529c8cd05e23df8b8b6c0d0db633b6d0e2872e1b0674c0e4a6664038bdf1744bc8b2c1e2a6eb7d2a1a78462065cefd6a2f66cdb6aed5cb291816ec4e263193e66f34c1eba5347c3377638b5b54887589b7d343a0e6f482fe6a054649944e811a094fd6573536d98837f2dd165a55d5eeae91485954472d56f246df256bf3cae19352a123c6b51cc02000000000000000000000000000000000000000000000000000000008fe781d175844e6423714c2725fad329f57f213afb974fb1addede30f5d782c2db56114e00fdd4c1f85c892bf35ac9a89289aaecb1ebd0a96cde606a748b5d71e0c2ebadd5f95306cb19c0ca611332efa81a5075003d04f9839635c3d8c0c8f2d167ad2702e81d21beb8f1dee4c64639ac8eb0159b24b8b0350bd162c36a860f6f77d560537fe959cccd7de9ecaa2dce35493a4637fe77bb4460bbcb447654c8109ddd7cfbba1f8bb4770d4a7861e24dd87b89064a00ead825f103f14dc07e955ed02db593f13bfc2280ca78535f4fb0c2a98533fc6962198cbf70df4a700450000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000134f90131a028128fddc3d879059d852b0a090fa064543fac51870cf83f84836c23a46aac8aa07a82d055c049dd5e6c2ed06c9fc4b41b1c6128951b1dbc29ead8ce903d7d3bf8a0cf2c51d9ac3e6c2f828467ca78f6a4022ab7d539ff9ca3cb978d019a1ce65a39a0e18436de150fb2236076440ef97c20e21c8e75d87e942ba1d7c0b7e21f52d388a03eb4ff496a15f41df1b2e511dca73341a6c09d2dc52d18c6a5f17752f4328269a0a1d142d64316cc0884d9719e5242ada32b25451368159f39e8d78129d56cb3c2a0ea44ab0dceee791c107548decfdbc83262f570d4628bea12bc9a92dc76b69a86a0ec05381aeb9bc1a54d42d7c0ed6b29d3dbe587623530f59d7fa2f476d0ea3d8ea00f4a52b161a3c4e4f328e6c497fd6236bca41605018c3f678bec4451936f324580808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000053f851a00b9f40e34219660ea779fac5af93fc74fef60693c5f116bd245afd182f2270a2a0a0c2ee13a57fd20e8f6c12d711c46e588e1e2fb012f2bfbc7bb71aae381ac2bf8080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b3f8b18080808080808080a071da8016fc37b9504696784a7789d265663ba9380d3b00ca1c2002a26cdeb2e4a005e3285d2d16fbf0a6968f8ff43c3a86f90ba751212fd1bef1f40932558ec8c5a035522179867c6744a1238b88adc5d7115a5ea34c6c64410694d7ce9d27fd3f02a07e39887d4da431324197ffa76fc650862fd2963f530a6fd7612fbb711ebb4e87a02f99dc300010e76ada96dc92d1e079c29deaff6cb32927a90f323a583fef1fdb80808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000214f90211a01014efd89d50dd2211f8a04b0046d6d89e749dcf02524181bdc273fb9bab8074a0e0d1d84a2eabda5d2125b240678d1f2d33b914c16fb60fa1ac6abeb9486e89bca04534294d7854ed2c9a10851ba1c8203695a2398d68cccb3fa9b4a877e4c812f1a05a5c621c93014c0478c43ef32d46836d79c85e3339fc526a4c7c12a9fdcac9d0a076a0554a348d542d6844f8b971e3ad397b593b5d98603dca523c9a5115edb11ea0639f5d8d70b4a4f09e5c39598827c18fa410ca2c9085fcb328d38514405fa624a0f535446f176d78d53422de61a82d1edb158dc72c765bb4b553a155b4ae429259a018028c6f73e8e844e0ae56f37d8ad0bf0e419ba35e57497cf78723f75c18e04da0d9a21f522b8f817f63e9d8d637fa9cbd997fdf0f8a9b5a985036bbd385e9bf85a079fc4ebe5e393fbb215b87de497628605f92329a9d00b47d5f6226c82bb1b515a057c4eed5eb704e22aaac2506d6cff864183519fc43486d9b9282c9a1fb19f32da012c2d1e9abd194a64268f280796e8db84f8ea2a2bd81fc1216c26d3fafbfe673a06fd15135bdc01b48d55bcf037cfda75b8807fbe53bc3709ee995288229491e18a0c8fd48b8da9ec804b443994121d0cc8514a60ac762a878176cf734dd95547004a0669c77b8d05d183b20626c2b4bffb3d164d4e68cfc90eb64ec24a873f311ac17a0ef72860e81ccde0b33fd622fdfacf1323c6e94b43afe5e1a8dbe78d76ea38bdd80000000000000000000000000000000000000000000000000000000000000000000000000000000000000028bf9028820b9028402f902800183ebd763bf90175f89b94c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000009ac7d14d57b444d3d5a7890f519a6864901be8cea0000000000000000000000000acb688e7542dd61d0e976e270cb562b5c93ca855a000000000000000000000000000000000000000000000000001be4911e99ef632f87a94c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2f842a07fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65a0000000000000000000000000acb688e7542dd61d0e976e270cb562b5c93ca855a000000000000000000000000000000000000000000000000001be4911e99ef632f85a94acb688e7542dd61d0e976e270cb562b5c93ca855f842a023164bf06272e7181c46edaa1489d6e021bab6e2ee7972b9662b467774dc4957a0320865942f1a7980d504a34ced177df217ab275824a6b7f35e79179bd41a53a080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000281a8000000000000000000000000000000000000000000000000000000000000';

    await lightClientMock.setConsistent();
    await lightClientMock.setHeader(event.srcSlot, event.headerRoot);
    await lightClientMock.setTimestamp(event.srcSlot);
    await waitMinLightClientDelay();

    // Validate proof
    const proofVerifierTest = await deployProofVerifierTest(event.chain, event.contract);
    await proofVerifierTest.verifyHashEventProofTest(event.signature, event.hash, event.chain, eventProof);
    const lastGasUsed = await proofVerifierTest.lastGasUsed();
    printGasInfo('call verifyHashEventProof (ethereum send, src != tx)', lastGasUsed);
  });
});
